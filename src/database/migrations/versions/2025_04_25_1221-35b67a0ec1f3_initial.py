"""Initial

Revision ID: 35b67a0ec1f3
Revises:
Create Date: 2025-04-25 12:21:49.685250

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "35b67a0ec1f3"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("telegram_id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(length=32), nullable=True),
        sa.Column("first_name", sa.String(length=64), nullable=False),
        sa.Column("last_name", sa.String(length=64), nullable=True),
        sa.Column("timezone", sa.String(length=32), nullable=False),
        sa.Column(
            "language_code",
            sa.String(length=5),
            server_default="en",
            nullable=False,
        ),
        sa.Column("phone_number", sa.String(length=20), nullable=True),
        sa.Column(
            "role",
            sa.Enum("PATIENT", "DOCTOR", "ADMIN", name="role"),
            nullable=False,
        ),
        sa.Column("privacy_accepted", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("phone_number"),
        sa.UniqueConstraint("telegram_id"),
    )
    op.create_table(
        "schedules",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("drug_name", sa.String(length=128), nullable=False),
        sa.Column("dose", sa.String(length=64), nullable=False),
        sa.Column("doses_per_day", sa.Integer(), nullable=False),
        sa.Column("duration", sa.Integer(), nullable=True),
        sa.Column("comment", sa.String(length=256), nullable=True),
        sa.Column(
            "start_datetime", sa.DateTime(timezone=True), nullable=False
        ),
        sa.Column(
            "end_datetime",
            sa.DateTime(timezone=True),
            sa.Computed(
                "start_datetime + INTERVAL duration DAY",
            ),
            nullable=True,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.CheckConstraint("doses_per_day > 0", name="check_doses_positive"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_schedules_user_id"), "schedules", ["user_id"], unique=False
    )
    op.create_table(
        "doses",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("schedule_id", sa.Integer(), nullable=False),
        sa.Column(
            "taken_datetime", sa.DateTime(timezone=True), nullable=False
        ),
        sa.Column("confirmed", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["schedule_id"], ["schedules.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_doses_schedule_id"), "doses", ["schedule_id"], unique=False
    )
    op.create_index(
        op.f("ix_doses_user_id"), "doses", ["user_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_doses_user_id"), table_name="doses")
    op.drop_index(op.f("ix_doses_schedule_id"), table_name="doses")
    op.drop_table("doses")
    op.drop_index(op.f("ix_schedules_user_id"), table_name="schedules")
    op.drop_table("schedules")
    op.drop_table("users")
    # ### end Alembic commands ###
